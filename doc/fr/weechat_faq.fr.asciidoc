= WeeChat FAQ (Questions Fréquemment Posées)
:author: Sébastien Helleu
:email: flashcode@flashtux.org
:lang: fr
:toc:
:toc-placement: manual


[NOTE]
Ce document est écrit pour les versions de WeeChat ≥ 0.3.0 mais devrait être
utilisé de préférence avec la dernière version stable de WeeChat.

toc::[]


== Général

[[weechat_name]]
=== D'où vient le nom "WeeChat" ?

"Wee" est un acronyme récursif qui signifie "Wee Enhanced Environment".
Donc le nom complet est "Wee Enhanced Environment for Chat".

"Wee" signifie également "très petit" (et oui, il y a une autre signification,
mais elle ne s'applique pas à WeeChat !).

[[why_choose_weechat]]
=== Pourquoi choisir WeeChat ? X-Chat et Irssi sont si bien...

Parce que WeeChat est très léger et apporte des fonctionnalités innovantes.

Plus d'infos sur cette page : https://weechat.org/about/features

[[compilation_install]]
== Compilation / installation

[[gui]]
=== J'ai entendu parler de plusieurs interfaces pour WeeChat. Comment puis-je les compiler/utiliser ?

Des interfaces distantes sont disponibles, voir les liens sur la page des
fonctionnalités : https://weechat.org/about/features

[[compile_git]]
=== Je ne peux pas compiler WeeChat après avoir cloné la base git, pourquoi ?

La méthode recommandée pour compiler WeeChat est d'utiliser cmake.

Si vous compilez avec les autotools (et non cmake), vérifiez que vous avez bien
la dernière version d'autoconf et automake.

Une autre façon de faire est de compiler le "paquet devel", qui nécessite moins
de dépendances. Ce paquet est construit quasiment tous les jours à partir de la
base git. Notez que ce paquet peut ne pas correspondre exactement à la base
git et qu'il est moins pratique que de cloner la base git pour installer des
mises à jour.

[[compile_osx]]
=== Comment puis-je installer WeeChat sous OS X ?

Il est recommandé d'utiliser http://brew.sh/[Homebrew], vous pouvez avoir de
l'aide avec :

----
brew info weechat
----

Vous pouvez installer WeeChat avec cette commande :

----
brew install weechat --with-aspell --with-curl --with-python --with-perl --with-ruby --with-lua --with-guile
----

[[lost]]
=== J'ai lancé WeeChat, mais je suis perdu, que puis-je faire ?

Pour obtenir de l'aide tapez `/help`. Pour de l'aide sur une commande, tapez
`/help commande`. Les touches et commandes sont listées dans la documentation.

Il est recommandé pour les nouveaux utilisateurs de lire le guide de démarrage
rapide : https://weechat.org/doc

[[display]]
== Affichage

[[charset]]
=== Je ne vois pas bien certains accents dans WeeChat, que faire ?

C'est un problème courant, merci de lire attentivement et vérifier *TOUS* les
points ci-dessous :

* vérifiez que weechat est lié avec libncursesw (attention : nécessaire
  sur beaucoup de distributions, mais pas toutes) :
  `ldd /chemin/vers/weechat`
* vérifiez que l'extension "Charset" est chargée avec la commande `/plugin`
  (s'il ne l'est pas, vous devez peut-être installer le paquet
  "weechat-plugins")
* vérifiez la sortie de la commande `/charset` (sur le tampon "core"), vous
  devriez voir 'ISO-XXXXXX' ou 'UTF-8' pour le charset du terminal. Si vous
  voyez 'ANSI_X3.4-1968' ou d'autres valeurs, votre locale est probablement
  erronée (corrigez votre $LANG).
* affectez la valeur pour le décodage global, par exemple :
  `/set charset.default.decode "ISO-8859-15"`
* si vous utilisez la locale UTF-8 :
** vérifiez que votre terminal est compatible UTF-8
   (un terminal conseillé pour l'UTF-8 est rxvt-unicode)
** si vous utilisez screen, vérifiez qu'il est lancé en mode UTF-8
   ("`defutf8 on`" dans ~/.screenrc ou `screen -U` pour lancer screen)
* vérifiez que l'option 'weechat.look.eat_newline_glitch' est désactivée (cette
  option peut causer des problèmes d'affichage)

[NOTE]
La locale UTF-8 est recommandée pour WeeChat. Si vous utilisez ISO ou une autre
locale, assurez-vous que *tout* soit configuré en ISO (terminal, screen, ...)
et *pas* en UTF-8.

[[unicode_chars]]
=== Certains caractères unicode sont affichés dans le terminal, mais pas dans WeeChat, pourquoi ?

Cela peut être causé par un bug de la libc dans la fonction 'wcwidth' et
devrait être corrigé dans la glibc 2.22 (peut-être pas encore disponible dans
votre distribution).

Il y a un moyen de contournement pour utiliser la fonction 'wcwidth' corrigée :
https://blog.nytsoi.net/2015/05/04/emoji-support-for-weechat

Voir ce rapport de bug pour plus d'informations :
https://github.com/weechat/weechat/issues/79

[[bars_background]]
=== Des barres telles que le titre et le statut ne sont pas remplies, la couleur de fond s'arrête après le texte, pourquoi ?

Cela peut être du à la variable TERM qui n'a pas la bonne valeur (regardez la
sortie de `echo $TERM` dans votre terminal).

Selon la façon de lancer WeeChat, vous devriez avoir :

* si WeeChat tourne en local ou sur une machine distante sans screen ni tmux :
  cela dépend du terminal utilisé : 'xterm', 'xterm-256color', 'rxvt-unicode',
  'rxvt-256color', etc...
* si WeeChat tourne sous screen, vous devriez avoir 'screen' ou 'screen-256color',
* si WeeChat tourne sous tmux, vous devriez avoir 'tmux', 'tmux-256color',
  'screen' ou 'screen-256color'.

Si besoin, corrigez la variable TERM : `export TERM="xxx"`.

[[screen_weird_chars]]
=== Quand j'utilise weechat sous screen/tmux, j'ai des caractères bizarres et aléatoires, comment corriger ça ?

Cela peut être du à la variable TERM qui n'a pas la bonne valeur (regardez la
sortie de `echo $TERM` dans votre terminal, *en dehors de screen/tmux*).

Par exemple 'xterm-color' provoque ce genre de problèmes, utilisez
'xterm' qui est ok (comme plein d'autres valeurs).

Si besoin, corrigez la variable TERM : `export TERM="xxx"`.

[[osx_display_broken]]
=== J'ai compilé WeeChat sous OS X, et je vois des "(null)" partout sur l'écran, pourquoi ?

Si vous avez compilé ncursesw vous-même, essayez avec le ncurses standard (celui
fourni avec le système).

De plus, sous OS X, il est recommandé d'installer WeeChat avec le gestionnaire
de paquets Homebrew.

[[buffer_vs_window]]
=== J'ai entendu parler de "buffer" et "window", quelle est la différence ?

Un tampon ('buffer') est composé d'un numéro, un nom, des lignes affichées
(ainsi que d'autres données).

Une fenêtre ('window') est une zone de l'écran affichant un tampon. Il est
possible de découper l'écran horizontalement ou verticalement en plusieurs
fenêtres.

Chaque fenêtre affiche un tampon. Un tampon peut être caché (affiché par
aucune fenêtre) ou affiché par une ou plusieurs fenêtres.

[[buffers_list]]
=== Comment afficher la liste des tampons sur la gauche ?

Utilisez le script 'buffers.pl' :

----
/script install buffers.pl
----

Pour limiter la taille de la barre :

----
/set weechat.bar.buffers.size_max 15
----

Pour déplacer la barre en bas :

----
/set weechat.bar.buffers.position bottom
----

[[customize_prefix]]
=== Comment puis-je réduire la longueur des pseudos ou supprimer l'alignement des pseudos dans la zone de discussion ?

Pour réduire la longueur maximum des pseudos dans la zone de discussion :

----
/set weechat.look.prefix_align_max 15
----

Pour supprimer l'alignement sur les pseudos :

----
/set weechat.look.prefix_align none
----

[[input_bar_size]]
=== Comment utiliser une ligne de commande sur plusieurs lignes ?

L'option 'size' dans la barre input peut être définie à une valeur supérieure
à 1 (pour une taille fixe, la taille par défaut est 1) ou 0 pour une taille
dynamique, et alors l'option 'size_max' définira la taille maximum (0 = pas de
limite).

Exemple avec une taille dynamique :

----
/set weechat.bar.input.size 0
----

Taille maximum de 2 :

----
/set weechat.bar.input.size_max 2
----

[[one_input_root_bar]]
=== Est-il possible d'avoir une seule bar input pour toutes les fenêtres (après un découpage) ?

Oui, vous devez créer une barre de type "root" (avec un objet pour savoir dans
quelle fenêtre vous êtes), puis supprimer la barre input courante.

Par exemple :

----
/bar add rootinput root bottom 1 0 [buffer_name]+[input_prompt]+(away),[input_search],[input_paste],input_text
/bar del input
----

Si jamais vous n'étiez pas satisfait avec ça, supprimez simplement la nouvelle
barre, WeeChat recréera automatiquement la barre par défaut "input" si l'objet
"input_text" n'est utilisé dans aucune barre :

----
/bar del rootinput
----

[[terminal_copy_paste]]
=== Comment puis-je copier/coller du texte sans coller la liste des pseudos ?

Avec WeeChat ≥ 1.0, vous pouvez utiliser l'affichage dépouillé (touche par
défaut : key[alt-l]).

Vous pouvez utiliser un terminal qui propose la sélection rectangulaire (comme
rxvt-unicode, konsole, gnome-terminal, etc...). La touche est habituellement
key[ctrl-]key[alt-] sélection à la souris.

Une autre solution est de déplacer la liste des pseudos en haut ou en bas, par
exemple :

----
/set weechat.bar.nicklist.position top
----

[[urls]]
=== Comment puis-je cliquer sur les longs URLs (plus d'une ligne) ?

Avec WeeChat ≥ 1.0, vous pouvez utiliser l'affichage dépouillé (touche par
défaut : key[alt-l]).

Par défaut, WeeChat affiche l'heure et un préfixe pour chaque ligne avec des
barres optionnelles autour de la zone de discussion. Pour rendre la le clic
d'URL plus facile, vous pouvez déplacer la liste des pseudos en haut et
supprimer l'alignement sur les pseudos :

----
/set weechat.bar.nicklist.position top
/set weechat.look.prefix_align none
/set weechat.look.align_end_of_lines time
----

Avec WeeChat ≥ 0.3.6, vous pouvez activer l'option "eat_newline_glitch", pour
éviter qu'un caractère de nouvelle ligne soit affiché après chaque ligne (donc
cela ne cassera pas la sélection d'une URL) :

----
/set weechat.look.eat_newline_glitch on
----

[IMPORTANT]
Cette option peut causer des problèmes d'affichage. Si vous rencontrez de tels
problèmes, vous devez désactiver cette option.

Une autre solution est d'utiliser un script :

----
/script search url
----

[[change_locale_without_quit]]
=== Je souhaite changer la langue des messages affichés par WeeChat, mais sans quitter WeeChat, est-ce possible ?

Oui, avec WeeChat ≥ 1.0 :

----
/set env LANG fr_FR.UTF-8
/upgrade
----

Avec un ancien WeeChat :

----
/script install shell.py
/shell setenv LANG=fr_FR.UTF-8
/upgrade
----

[[use_256_colors]]
=== Comment puis-je utiliser 256 couleurs sous WeeChat ?

Les 256 couleurs sont supportées avec WeeChat ≥ 0.3.4.

Premièrement vérifiez que votre variable d'environnement 'TERM' est correcte,
les valeurs recommandées sont :

* sous screen : 'screen-256color'
* sous tmux : 'screen-256color' ou 'tmux-256color'
* en dehors de screen/tmux : 'xterm-256color', 'rxvt-256color',
  'putty-256color', ...

[NOTE]
Vous devrez peut-être installer le paquet "ncurses-term" pour utiliser ces
valeurs dans la variable 'TERM'.

Si vous utilisez screen, vous pouvez ajouter cette ligne dans votre
'~/.screenrc' :

----
term screen-256color
----

Si votre variable 'TERM' a une valeur erronée et que WeeChat est déjà lancé,
vous pouvez la changer avec ces deux commandes (avec WeeChat ≥ 1.0) :

----
/set env TERM screen-256color
/upgrade
----

Pour la version 0.3.4, vous devez utiliser la commande `/color` pour ajouter
des nouvelles couleurs.

Pour les versions ≥ 0.3.5, vous pouvez utiliser un numéro de couleur dans les
options (facultatif : vous pouvez ajouter des alias de couleurs avec la commande
`/color`).

Merci de lire le guide utilisateur pour plus d'information sur la gestion des
couleurs.

[[search_text]]
=== Comment puis-je chercher du texte dans le tampon (comme /lastlog dans irssi) ?

La touche par défaut est key[ctrl-r] (la commande est : `/input search_text_here`).
Et sauter aux highlights : key[alt-p] / key[alt-n].

Voir le guide utilisateur pour plus d'information sur cette fonctionnalité
(raccourcis clavier par défaut).

[[terminal_focus]]
=== Comment puis-je exécuter des commandes lorsque le terminal obtient/perd le focus ?

Vous devez activer les évènements du focus avec un code spécial envoyé au
terminal.

*Important* :

* Actuellement, *seulement* 'xterm' semble supporter cette fonctionnalité.
* Cela ne fonctionne *pas* sous screen/tmux.

Pour envoyer le code au démarrage de WeeChat :

----
/set weechat.startup.command_after_plugins "/print -stdout \033[?1004h\n"
----

Puis associez deux touches pour le focus (remplacez les commandes `/print` par
les commandes de votre choix) :

----
/key bind meta2-I /print -core focus
/key bind meta2-O /print -core unfocus
----

[[key_bindings]]
== Raccourcis clavier

[[meta_keys]]
=== Quelques touches meta (alt + touche) ne fonctionnent pas, pourquoi ?

Si vous utilisez certains terminaux comme xterm ou uxterm, quelques touches
meta ne fonctionnent pas par défaut. Vous pouvez ajouter cette ligne dans le
fichier '~/.Xresources' :

* pour xterm :
----
XTerm*metaSendsEscape: true
----
* pour uxterm :
----
UXTerm*metaSendsEscape: true
----

Puis recharger les ressources (`xrdb -override ~/.Xresources`) ou redémarrez X.

[[customize_key_bindings]]
=== Comment puis-je configurer les raccourcis clavier ?

Les raccourcis clavier sont modifiables avec la commande `/key`.

La touche par défaut key[alt-k] permet de capturer le code d'une touche et de
l'inclure dans la ligne de commande.

[[jump_to_buffer_11_or_higher]]
=== Quelle est la touche pour sauter vers le tampon 11 (ou numéro plus élevé) ?

La touche est key[alt-j] puis 2 chiffres, par exemple key[alt-j], key[1],
key[1] pour sauter au tampon 11.

Vous pouvez définir une touche, par exemple :

----
/key bind meta-q /buffer *11
----

La liste des touches par défaut est dans le Guide utilisateur.

[[global_history]]
=== Comment utiliser l'historique global (au lieu de l'historique du tampon) avec les touches haut et bas ?

Vous pouvez assigner les touches haut et bas sur l'historique global (les
touches par défaut pour l'historique global sont key[ctrl-↑] et key[ctrl-↓]).

Exemple :

----
/key bind meta2-A /input history_global_previous
/key bind meta2-B /input history_global_next
----

[NOTE]
Les touches "meta2-A" et "meta2-B" peuvent être différentes dans votre terminal.
Pour trouver le code de la touche appuyez sur key[alt-k] puis la touche (haut
ou bas).

[[mouse]]
== Souris

[[mouse_not_working]]
=== La souris ne fonctionne pas du tout, que puis-je faire ?

La souris est supportée avec WeeChat ≥ 0.3.6.

Premièrement essayez d'activer la souris :

----
/mouse enable
----

Si la souris ne fonctionne toujours pas, vérifiez la variable TERM dans votre
shell (regardez la sortie de `echo $TERM` dans votre terminal).
Selon le terminfo utilisé, la souris peut ne pas être supportée.

Vous pouvez tester le support de la souris dans le terminal :

----
$ printf '\033[?1002h'
----

Et cliquez sur le premier caractère du terminal (en haut à gauche). Vous devriez
voir " !!#!!".

Pour désactiver la souris dans le terminal :

----
$ printf '\033[?1002l'
----

[[mouse_coords]]
=== La souris ne fait rien pour un X ou Y supérieur à 94 (ou 222), pourquoi ?

Certains terminaux envoient seulement des caractères ISO pour les coordonnées
de la souris, donc cela ne fonctionne pas avec un X/Y supérieur à 94 (ou 222).

Vous devriez utiliser un terminal qui supporte les coordonnées UTF-8 pour la
souris, comme rxvt-unicode.

[[mouse_select_paste]]
=== Comment puis-je sélectionner ou coller du texte quand la souris est activée dans WeeChat ?

Lorsque la souris est activée dans WeeChat, vous pouvez utiliser la touche
key[shift] pour sélectionner ou cliquer dans le terminal, comme si la souris
était désactivée (sous certains terminaux comme iTerm, vous devez utiliser
key[alt] au lieu de key[shift]).

[[irc]]
== IRC

[[irc_ssl_connection]]
=== J'ai des problèmes pour me connecter au serveur avec SSL, que puis-je faire ?

Si vous utilisez Mac OS X, vous devez installer `openssl` depuis Homebrew.
Un fichier CA sera installé avec le le trousseau système. Vous pouvez alors
définie le chemin vers les certificats sous WeeChat :

----
/set weechat.network.gnutls_ca_file "/usr/local/etc/openssl/cert.pem"
----

Si vous voyez des erreurs à propos de la poignée de main gnutls ("handshake"),
vous pouvez utiliser une valeur plus petite pour la clé Diffie-Hellman (par
défaut 2048) :

----
/set irc.server.example.ssl_dhkey_size 1024
----

Si vous voyez des erreurs à propos du certificat, vous pouvez désactiver
"ssl_verify" (attention, la connexion sera moins sûre en faisant cela) :

----
/set irc.server.example.ssl_verify off
----

Si le serveur a un certificat invalide et que vous savez ce que devrait être
le certificat, vous pouvez spécifier l'empreinte (SHA-512, SHA-256 ou SHA-1) :

----
/set irc.server.example.ssl_fingerprint 0c06e399d3c3597511dc8550848bfd2a502f0ce19883b728b73f6b7e8604243b
----

[[irc_ssl_handshake_error]]
=== Lors de la connexion SSL à un serveur, je vois juste une erreur "TLS handshake failed", que puis-je faire ?

Vous pouvez essayer une chaîne de priorité différente (WeeChat ≥ 0.3.5
seulement), remplacez "xxx" par le nom de votre serveur :

----
/set irc.server.xxx.ssl_priorities "NORMAL:-VERS-TLS-ALL:+VERS-TLS1.0:+VERS-SSL3.0:%COMPAT"
----

[[irc_ssl_freenode]]
=== Comment puis-je me connecter à freenode avec SSL ?

Positionnez l'option 'weechat.network.gnutls_ca_file' avec le fichier des
certificats :

----
/set weechat.network.gnutls_ca_file "/etc/ssl/certs/ca-certificates.crt"
----

[NOTE]
Vérifiez que vous avez bien ce fichier (fourni généralement par le paquet
"ca-certificates").

Configurez le port du serveur, SSL, puis connectez-vous :

----
/set irc.server.freenode.addresses "chat.freenode.net/7000"
/set irc.server.freenode.ssl on
/connect freenode
----

[[irc_oauth]]
=== Comment se connecter à un serveur qui requiert "oauth" ?

Des serveurs tels que 'twitch' requièrent oauth pour se connecter.

L'oauth est simplement un mot de passe avec la valeur "oauth:XXXX".

Vous pouvez ajouter un tel serveur et vous y connecter avec les commandes
suivantes (remplacez le nom et l'adresse par les valeurs appropriées) :

----
/server add nom irc.server.org -password=oauth:XXXX
/connect nom
----

[[irc_sasl]]
=== Comment puis-je être identifié avant de rejoindre les canaux ?

Si le serveur supporte SASL, vous devriez l'utiliser au lieu d'envoyer une
commande pour l'authentification avec nickserv, par exemple :

----
/set irc.server.freenode.sasl_username "mynick"
/set irc.server.freenode.sasl_password "xxxxxxx"
----

Si le serveur ne supporte pas SASL, vous pouvez ajouter un délai (entre la
commande et le join des canaux) :

----
/set irc.server.freenode.command_delay 5
----

[[ignore_vs_filter]]
=== Quelle est la différence entre les commandes /ignore et /filter ?

La commande `/ignore` est une commande IRC, donc elle s'applique uniquement aux
tampons IRC (serveurs et canaux).
Elle permet d'ignorer des pseudos ou nom d'hôtes pour un serveur ou un canal
(la commande ne s'applique pas au contenu des messages).
Les messages correspondants sont supprimés par l'extension IRC avant affichage
(donc vous ne les verrez jamais).

La commande `/filter` est une commande "core", donc elle s'applique à n"importe
quel tampon.
Elle permet de filtrer des lignes dans les tampons à l'aide d'étiquettes ou
d'expression régulière pour le préfixe et contenu de la ligne.
Les lignes filtrées sont simplement cachées, pas supprimées, et il est possible
de les voir en désactivant les filtres (par défaut, la touche key[alt-=]
active/désactive les filtres).

[[filter_irc_join_part_quit]]
=== Comment puis-je filtrer les messages join/part/quit sur les canaux IRC ?

Avec le filtre intelligent (pour garder les join/part/quit des utilisateurs qui
ont parlé récemment) :

----
/set irc.look.smart_filter on
/filter add irc_smart * irc_smart_filter *
----

Avec un filtre global (pour cacher *tous* les join/part/quit) :

----
/filter add joinquit * irc_join,irc_part,irc_quit *
----

[NOTE]
Pour l'aide : `/help filter` et `/help irc.look.smart_filter`

[[filter_irc_join_channel_messages]]
=== Comment puis-je filtrer certains messages affichés quand je rejoins un canal IRC ?

Avec WeeChat ≥ 0.4.1, vous pouvez choisir les messages affichés ou non lorsque
vous rejoignez un canal avec l'option 'irc.look.display_join_message' (voir
`/help irc.look.display_join_message` pour plus d'informations).

Pour cacher des messages (mais les garder dans le tampon), vous pouvez les
filtrer en utilisant l'étiquette (par exemple 'irc_329' pour la date de création
du canal). Voir `/help filter` pour l'aide sur les filtres.

[[filter_voice_messages]]
=== Comment puis-je filtrer les messages voice (par exemple sur le serveur Bitlbee) ?

Il n'est pas facile de filtrer les messages voice, car le mode voice peut être
positionné avec d'autres modes dans le même message IRC.

Si vous souhaitez faire cela, c'est probablement parce que Bitlbee utilise le
voice pour montrer les utilisateurs absents, et vous recevez plein de messages
voice. Par conséquent, vous pouvez changer cela et laisser WeeChat utiliser une
couleur spéciale pour les pseudos absents dans la liste des pseudos.

Pour Bitlbee ≥ 3, faites ceci sur le canal '&bitlbee' :

----
channel [<channel id>] set show_users online,away
----

Pour une version plus ancienne de Bitlbee, faites ceci sur le canal
'&bitlbee' :

----
set away_devoice false
----

Pour vérifier les pseudos absents dans WeeChat, voir la question à propos des
<<color_away_nicks,pseudos absents>>.

Si vous voulez vraiment filtrer les messages voice, vous pouvez utiliser cette
commande, mais elle n'est pas parfaite (elle fonctionne seulement si le
premier mode changé est voice) :

----
/filter add hidevoices * irc_mode (\+|\-)v
----

[[color_away_nicks]]
=== Comment puis-je voir les pseudos absents dans la liste des pseudos ?

Vous devez positionner l'option 'irc.server_default.away_check' avec une valeur
positive (minutes entre chaque vérification des pseudos absents).

Vous pouvez aussi positionner l'option 'irc.server_default.away_check_max_nicks'
pour limiter la vérification d'absence sur les petits canaux seulement.

Par exemple, pour vérifier les pseudos absents toutes les 5 minutes, pour les
canaux avec maximum 25 pseudos :

----
/set irc.server_default.away_check 5
/set irc.server_default.away_check_max_nicks 25
----

[NOTE]
Pour WeeChat ≤ 0.3.3, les options sont 'irc.network.away_check' et
'irc.network.away_check_max_nicks'.

[[highlight_notification]]
=== Comment être averti lorsque quelqu'un prononce mon pseudo sur un canal ?

Avec WeeChat ≥ 1.0, il y a un trigger "beep" qui envoie 'BEL' au terminal sur
un highlight ou un message privé. Par conséquent vous pouvez configurer votre
terminal (ou multiplexeur comme screen/tmux) pour lancer une commande ou jouer
un son lorsque le 'BEL' se produit.

Ou vous pouvez ajouter une commande dans le trigger "beep" :

----
/set trigger.trigger.beep.command "/print -beep;/exec -bg /chemin/vers/commande paramètres"
----

Avec un WeeChat plus ancien, vous pouvez utiliser un script comme 'beep.pl' or
'launcher.pl'.

Pour 'launcher.pl', vous devez configurer la commande :

----
/set plugins.var.perl.launcher.signal.weechat_highlight "/chemin/vers/commande paramètres"
----

Autres scripts sur ce sujet :

----
/script search notify
----

[[irc_target_buffer]]
=== Comment puis-je changer le serveur cible pour les commandes avec des tampons mélangés (comme le tampon avec les serveurs) ?

La touche par défaut est key[ctrl-x] (la commande est :
`/input switch_active_buffer`).

[[plugins_scripts]]
== Extensions / scripts

[[openbsd_plugins]]
=== J'utilise OpenBSD et WeeChat ne charge aucune extension, pourquoi ?

Sous OpenBSD, le nom des extensions se termine par ".so.0.0" (".so" sous
Linux).

Vous devez configurer ça :

----
/set weechat.plugin.extension ".so.0.0"
/plugin autoload
----

[[install_scripts]]
=== Comment puis-je installer des scripts ? Les scripts sont-ils compatibles avec d'autres clients IRC ?

Vous pouvez utiliser la commande `/script` pour installer et gérer les scripts
(voir `/help script` pour de l'aide).

Les scripts ne sont pas compatibles avec d'autres clients IRC.

[[settings]]
== Réglages

[[memory_usage]]
=== Comment configurer WeeChat pour consommer moins de mémoire ?

Vous pouvez essayer les astuces suivantes pour consommer moins de mémoire :

* utiliser la dernière version stable (elle est supposée avoir moins de fuites
  de mémoire que les versions plus anciennes)
* ne pas charger les extensions si vous ne les utilisez pas, par exemple :
  aspell, fifo, logger, perl, python, ruby, lua, tcl, guile, javascript,
  xfer (utilisé pour les DCC)
* charger uniquement les scripts dont vous avez vraiment besoin
* ne pas charger les certificats si SSL n'est *PAS* utilisé : affecter une
  chaîne vide pour l'option 'weechat.network.gnutls_ca_file'
* réduire la valeur de l'option 'weechat.history.max_buffer_lines_number' ou
  affecter une valeur à l'option 'weechat.history.max_buffer_lines_minutes'
* réduire la valeur de l'option 'weechat.history.max_commands'

[[cpu_usage]]
=== Comment configurer WeeChat pour moins utiliser le processeur ?

Vous pouvez suivre les mêmes astuces que pour la <<memory_usage,mémoire>>, et
celles-ci :

* cacher la barre "nicklist" : `/bar hide nicklist`
* supprimer l'affichage des secondes dans l'heure de la barre de statut :
  `/set weechat.look.item_time_format "%H:%M"` (ceci est la valeur par défaut)
* définir la variable 'TZ' (par exemple : `export TZ="Europe/Paris"`), pour
  éviter un accès fréquent au fichier '/etc/localtime'

[[security]]
=== Je suis paranoïaque sur la sécurité, quels paramètres puis-je changer pour être encore plus sûr ?

Désactivez les messages de part et quit IRC :

----
/set irc.server_default.default_msg_part ""
/set irc.server_default.default_msg_quit ""
----

Désactivez les réponses à toutes les demandes CTCP :

----
/set irc.ctcp.clientinfo ""
/set irc.ctcp.finger ""
/set irc.ctcp.source ""
/set irc.ctcp.time ""
/set irc.ctcp.userinfo ""
/set irc.ctcp.version ""
/set irc.ctcp.ping ""
----

Déchargez et désactivez le chargement automatique de l'extension "xfer"
(utilisée pour le DCC IRC) :

----
/plugin unload xfer
/set weechat.plugin.autoload "*,!xfer"
----

Définissez une phrase de chiffrement et utilisez les données sécurisées partout
où vous le pouvez pour les données sensibles comme les mots de passe : voir
`/help secure` et `/help` sur les options (si vous pouvez utiliser les données
sécurisées, cela est mentionné dans l'aide).

Par exemple :

----
/secure passphrase xxxxxxxxxx
/secure set freenode_username username
/secure set freenode_password xxxxxxxx
/set irc.server.freenode.sasl_username "${sec.data.freenode_username}"
/set irc.server.freenode.sasl_password "${sec.data.freenode_password}"
----

[[development]]
== Développement

[[bug_task_patch]]
=== Comment puis-je reporter un bug, demander une nouvelle fonctionnalité ou envoyer un patch ?

Voir : https://weechat.org/dev/support

[[gdb_error_threads]]
=== Quand je lance WeeChat sous gdb, il y a une erreur à propos des threads, que puis-je faire ?

Quand vous lancez WeeChat sous gdb, vous pouvez avoir cette erreur :

----
$ gdb /path/to/weechat
(gdb) run
[Thread debugging using libthread_db enabled]
Cannot find new threads: generic error
----

Pour corriger ça, vous pouvez lancer gdb avec cette commande (remplacez le
chemin vers libpthread et WeeChat avec les chemins sur votre système) :

----
$ LD_PRELOAD=/lib/libpthread.so.0 gdb /path/to/weechat
(gdb) run
----

[[supported_os]]
=== Quelle est la liste des plates-formes supportées par WeeChat ? Sera-t-il porté sur d'autres systèmes d'exploitation ?

La liste complète est sur cette page : https://weechat.org/download

Nous faisons le maximum pour supporter le plus de plates-formes possible.
Toute aide est la bienvenue pour les systèmes que nous n'avons pas, pour y
tester WeeChat.

[[help_developers]]
=== Je souhaiterais aider les développeurs WeeChat. Que puis-je faire ?

Il y a plusieurs choses à faire (test, code, documentation, etc...)

Merci de prendre contact avec nous par IRC ou mail, consultez la page
support : https://weechat.org/dev/support

[[donate]]
=== Puis-je donner de l'argent ou d'autres choses aux développeurs WeeChat ?

Vous pouvez donner de l'argent pour aider le développement.
Plus de détails sur https://weechat.org/about/donate
